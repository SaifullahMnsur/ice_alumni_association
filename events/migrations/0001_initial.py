# Generated by Django 5.1.4 on 2024-12-31 19:32

import django.core.validators
import django.db.models.deletion
import events.models.Event
import events.models.Registration
import tinymce.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('event_id', models.SlugField(primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(message='Event ID can only contain letters, numbers, and hyphens.', regex='^[a-zA-Z0-9-]+$')], verbose_name='Event ID')),
                ('title', models.CharField(max_length=200, verbose_name='Event Title')),
                ('description', tinymce.models.HTMLField(help_text='Rich HTML content for the event description.')),
                ('start_time', models.DateTimeField(help_text='The start time of the event.')),
                ('end_time', models.DateTimeField(help_text='The end time of the event.')),
                ('location', models.CharField(blank=True, help_text='Location where the event will take place.', max_length=255)),
                ('status', models.CharField(choices=[('upcoming', 'Upcoming'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='upcoming', help_text='The current status of the event.', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='The time when the event was created.')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='The last time the event was updated.')),
                ('media_file', models.FileField(blank=True, help_text='Upload an image, gif, or video for the event.', null=True, upload_to=events.models.Event.event_media_upload_to)),
                ('amount_per_person', models.PositiveIntegerField(default=0, help_text='The amount per person for the event.')),
                ('amount_per_adult_guest', models.PositiveIntegerField(default=0, help_text='The amount per person for the event.')),
                ('amount_per_child_guest', models.PositiveIntegerField(default=0, help_text='The amount per person for the event.')),
            ],
        ),
        migrations.CreateModel(
            name='Registration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.CharField(max_length=50, unique=True)),
                ('full_name', models.CharField(max_length=255)),
                ('date_of_birth', models.DateField()),
                ('batch', models.CharField(max_length=50)),
                ('session', models.CharField(max_length=50)),
                ('email', models.EmailField(max_length=254)),
                ('contact_number', models.CharField(max_length=15)),
                ('whatsapp_number', models.CharField(max_length=15)),
                ('adult_guests', models.PositiveIntegerField()),
                ('child_guests', models.PositiveIntegerField()),
                ('total_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('payment_method', models.CharField(max_length=100)),
                ('transaction_id', models.CharField(max_length=255)),
                ('transaction_document', models.FileField(upload_to=events.models.Registration.transaction_upload_to)),
                ('profile_picture', models.ImageField(upload_to=events.models.Registration.profile_picture_upload_to)),
                ('registration_datetime', models.DateTimeField(auto_now_add=True)),
                ('password', models.CharField(max_length=255)),
                ('approved', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='events.event')),
            ],
        ),
    ]
